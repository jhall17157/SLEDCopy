@model CLS_SLE.Models.AssessmentMappingsViewModel
@using System.Data.SqlClient;
@{

}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Admin Dashboard", "AdminDashboard")</li>
        <li class="breadcrumb-item active" aria-current="page">Mapping</li>
    </ol>
</nav>

<h2> Assessment Mapping </h2>

@foreach (var program in Model.Programs)
{
    var rubrics = Model.AssessmentRubrics.Select(r => r.ProgramAssessmentMappings.Where(m => m.ProgramID == program.ProgramID)).ToList();

    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th scope="col" class="h3">@program.Name <button type="button" class="btn btn-primary right" data-toggle="modal" data-target="#modal@(program.Number)">Assign</button></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var grouping in rubrics)
            {
                var rubricName = grouping.FirstOrDefault()?.AssessmentRubric.Name;

                if (rubricName != null)
                {
                    <tr>
                        <td><h5>@rubricName</h5></td>
                    </tr>
                    foreach (var assessment in grouping)
                    {
                        foreach (var rubric in grouping)
                        {
                            if (assessment.CourseID == rubric.CourseID)
                            {
                                <tr>
                                    <td><i class="fa fa-caret-right"></i> @rubric.Course.CourseName</td>
                                </tr>
                            }
                        }
                    }
                }
            }
        </tbody>
    </table>

    <!--Assign Modal-->
    <div class="modal fade" id="modal@(program.Number)" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalHeader@(program.Number)">Mapping for @program.Name</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <table class="table col-6">
                            <thead>
                                <tr>
                                    <th class="border-0">Rubric</th>
                                </tr>
                            </thead>
                            <tbody>
                            @{
                                var theseRubrics = rubrics.Select(grouping => grouping.FirstOrDefault()?.AssessmentRubric.Name).Where(rubricName => rubricName != null);
                            }
                            
                            @foreach (var rubricName in theseRubrics)
                            {
                                <tr>
                                    <td><h5><input type="radio" name="assessmentSelect_@(program.ProgramID)" class="programRadio"
                                                   @(theseRubrics.ToList().IndexOf(rubricName) == 0 ? "checked" : "")> @rubricName</h5></td>
                                    <td><button class="btn btn-danger float-right mr-2"><i class="fas fa-times"></i></button></td>
                                </tr>
                            }
                            <tr>
                                <td>
                                    <div class="rubricDropdown">
                                        <select class="btn btn-secondary dropdown-toggle selectpicker" data-show-subtext="true" data-live-search="true">
                                            @foreach (var rubric in Model.AssessmentRubrics)
                                            {
                                                <option id="@rubric.RubricID">@rubric.Name</option>
                                            }
                                        </select>
                                        <button type="button" class="btn btn-outline-success float-left addRubricToProgram">Add</button>
                                    </div>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-success float-right mr-2 addRubricShow"><i class="fa fa-plus"></i></button>
                                </td>
                            </tr>
                            </tbody>
                        </table>
                        <table class="table col-6">
                            <thead>
                                <tr>
                                    <th class="border-0">Class</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var grouping in rubrics)
                                {
                                    var rubricName = grouping.FirstOrDefault()?.AssessmentRubric.Name;

                                    if (rubricName != null)
                                    {
                                        foreach (var assessment in grouping)
                                        {
                                            foreach (var rubric in grouping)
                                            {
                                                if (assessment.CourseID == rubric.CourseID)
                                                {
                                                    <div class="courseFor@(rubric.ProgramID)">
                                                        <tr>
                                                            <td><h5>@rubric.Course.CourseName</h5></td>
                                                            <td><button class="btn btn-danger float-right mr-2"><i class="fas fa-times"></i></button></td>
                                                        </tr>
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                }
                                <tr>
                                    <td>
                                        <div class="classDropdown">
                                            <select class="btn btn-secondary dropdown-toggle selectpicker" data-show-subtext="true" data-live-search="true">
                                                @foreach (var course in Model.Courses)
                                                {
                                                    <option id="@course.CourseID">@course.CourseName</option>
                                                }
                                            </select>
                                            <button type="button" class="btn btn-outline-success addClassToRubric">Add</button>
                                        </div>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-success float-right mr-2 addClassShow"><i class="fa fa-plus"></i></button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts
    {
    <script>

        $(function () {
            $('.rubricDropdown').hide();
            $('.classDropdown').hide();

            $('.addRubricToProgram').click(function () {
                $('.addRubricShow').show();

                 /*var rubricID = $('.selectpicker :selected').attr('id');*/
                 alert(rubricID);
                 @{

                SqlConnection conn = new SqlConnection();
                conn.ConnectionString =
                    "Data Source=bitsql.wctc.edu;Initial Catalog=SLE_Tracking;" +
                    "Persist Security Info=True;" +
                    "User ID=SleWebApp;" +
                    "Password=P@ssw0rd;" +
                    "MultipleActiveResultSets=True;" +
                    "Application Name=EntityFramework";


                conn.Open();
                SqlCommand cmd = new SqlCommand("", conn);

                    /* using (SqlDataReader rdr = cmd.ExecuteReader())
                     {
                         while (rdr.Read())
                         {
                            
                         }
                         conn.Close();
                     }
                     */
                    }
              alert("Result" + myString);
                 $('.rubricDropdown').hide();

});

            $('.addClassToRubric').click(function () {
                $('.addClassShow').show();

                $('.classDropdown').hide();
                     });

            $('.addRubricShow').click(function () {
                $('.addRubricShow').hide();
                $('.rubricDropdown').show();
                     });

            $('.addClassShow').click(function () {
                $('.addClassShow').hide();
                $('.classDropdown').show();
                     });
                     });
    </script>
}