@using System.Text
@using CLS_SLE.Models
@model CLS_SLE.ViewModels.SchedulingViewModel
@{
    ViewBag.Title = "Index";
}
@Styles.Render("~/Content/bootstrap-select")


<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Admin Dashboard", "AdminDashboard", "Admin")</li>
        <li class="breadcrumb-item active" aria-current="page">Assessment Scheduling</li>
    </ol>
</nav>


<h2>Assessment Scheduling</h2>

@using (Html.BeginForm("Index", "AdminScheduling", FormMethod.Post))
{
    //Populates a list of semesters to choose from with live search
    <div class="form-inline mt-4 mb-4">
        <div class="row col-12">

            <div class="form-group col-12">
                <p class="col-12 mb-1 pl-0">Search For A Semester:</p>
                @Html.DropDownListFor(s => s.SemesterID, Model.Semesters, "-Select Semester-", new
                {
                    @id = "DropDownSemesters",
                    @class = "form-control selectpicker d-inline col-6",
                    onchange = "this.form.submit();"
                })


                <input type="submit" class="btn btn-primary d-inline ml-2" value="Submit" />
            </div>
        </div>
    </div>
}

@if (Model.Semester != null)
{
    <hr />
    <!-- Toolbar Functions -->
    <div class="row mt-4 mb-4 bg-dark text-white pt-2 pb-3 pl-4 pr-4">
        <div class="row col-4">
            <p class="col-12 mb-1 pl-0">Search For A Course:</p>
            @Html.DropDownListFor(s => s.SemesterID, Model.Semesters, "-Select Semester-", new
            {
                @id = "DropDownSemesters",
                @class = "form-control selectpicker d-inline col-10"
            })
            <!--<button type="submit" class="btn btn-primary d-inline ml-1" value="Submit"><i class="fas fa-search"></i></button>-->
        </div>
        <div class="row col-4">
            <p class="col-12 mb-1 pl-0">Filter By Assessments:</p>
            @Html.DropDownListFor(s => s.SemesterID, Model.Semesters, "-Select Semester-", new
            {
                @id = "DropDownSemesters",
                @class = "form-control selectpicker d-inline col-10"
            })
            <!--<button type="submit" class="btn btn-primary d-inline ml-1" value="Submit"><i class="fas fa-search"></i></button>-->
        </div>
        <div class="row col-4">
            <p class="col-12 mb-1 pl-0">Edit Functions</p>
            <div class="col-8">
                <button type="submit" class="btn btn-warning d-inline ml-1" data-toggle="modal" data-target="#editDueDatesModal">Edit All Due Dates</button>
            </div>

        </div>
    </div>

    <div class="mt-4 mb-4">
        <h5>@Model.Semester.Name</h5>
    </div>

    <table class="table table-hover">
        <thead>
            <tr>
                <td>Instructor Name</td>
                <td>Instructor Email</td>
                <td>Course Number</td>
                <td>Course Name</td>
                <td>Rubric Name</td>
                <td>Start Date</td>
                <td>End Date</td>
            </tr>
        </thead>
        <tbody>

            <tr>
                <td></td>
                <td></td>
                <td></td>
            </tr>

            @foreach (Section sec in Model.Semester.Sections.OrderBy(c => c.CourseID).ThenBy(s => s.CRN))
            {
                foreach (SectionRubric sr in sec.SectionRubrics)
                {
                    var Instructor = @Model.People.FirstOrDefault(p => p.PersonID == sec.LeadInstructorID);
                    <tr>
                        @if (Instructor != null)
                        {
                            <td> @String.Concat(Instructor.LastName, ", ", Instructor.FirstName)</td>
                            <td>@Instructor.User.Email</td>
                        }
                        else
                        {
                            <td colspan="2">No Instructor Assigned</td>
                            <td></td>
                        }
                        <td>@sec.Course.Number<text>-</text>@sec.CRN</td>
                        <td>@sec.Course.CourseName</td>
                        <td>@sr.AssessmentRubric.Name</td>
                        <td>@sr.StartDate.ToShortDateString()</td>
                        <td>@sr.EndDate.ToShortDateString()</td>



                    </tr>
                }
            }

            @*@foreach (Section sec in Model.Semester.Sections.OrderBy(c => c.CourseID))
                {
                    var Instructor = @Model.People.FirstOrDefault(p => p.PersonID == sec.LeadInstructorID);
                    <tr>
                        @if (Instructor != null)
                        {
                            <td> @String.Concat(Instructor.LastName, ", ", Instructor.FirstName)</td>
                            <td>@Instructor.User.Email</td>
                        }
                        else
                        {
                            <td>No Instructor Assigned</td>
                            <td></td>
                        }

                        <td>@String.Concat(sec.Course.Number, " - ", @sec.Course.CourseName)</td>


                    </tr>
                    foreach (SectionRubric sr in sec.SectionRubrics)
                    {
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>@sr.AssessmentRubric.Name</td>

                        </tr>
                    }

                }*@
        </tbody>
    </table>

    <!-- Edit All Due Dates Modal-->
    <div class="modal fade" id="editDueDatesModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h3 class="modal-title" id="removeConfirm">Edit Due Dates</h3>
                    <i class="ml-auto fas fa-calendar-alt fa-2x"></i>
                </div>
                <div class="modal-body row p-8">
                    <div class="col-6">
                        <p class="col-12 mb-1 pl-0">Start Date</p>
                        @Html.DropDownListFor(s => s.SemesterID, Model.Semesters, "-Select Semester-", new
                        {
                            @id = "DropDownSemesters",
                            @class = "form-control d-inline col-11"
                        })                    
                    </div>
                    <div class="col-6">
                        <p class="col-12 mb-1 pl-0">End Date</p>
                        @Html.DropDownListFor(s => s.SemesterID, Model.Semesters, "-Select Semester-", new
                        {
                            @id = "DropDownSemesters",
                            @class = "form-control d-inline col-121"
                        })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary mr-auto" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-outline-success float-right">Confirm</button>
                </div>
            </div>
        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap-select")


}