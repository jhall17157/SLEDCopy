@using CLS_SLE.Models;
@{
    ViewBag.Title = "Edit Criterion";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Admin Dashboard", "AdminDashboard", "Admin")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Assessments", "Assessments", "AdminAssessments")</li>
        @*
        This is the only page in the solution where the following line pulls from the database from a column that should still exist.
        If you intend to keep the breadcrumbs as is you should adapt from this line to the rest of the views in this controller, 
        however you may instead want to pass the assessment that the user has navigated from down the chain, as rubrics will need 
        to pertain to multiple assessments as per specification.
        *@
        <li class="breadcrumb-item">@Html.ActionLink((String)((AssessmentRubric)Model.Criterion.Outcome.AssessmentRubric).RubricAssessments.FirstOrDefault().Assessment.Name, "ViewAssessment", "AdminAssessments", new { assessmentID = ((AssessmentRubric)Model.Criterion.Outcome.AssessmentRubric).RubricAssessments.FirstOrDefault().AssessmentID }, null)</li>
        <li class="breadcrumb-item">@Html.ActionLink((String)Model.Criterion.Outcome.AssessmentRubric.Name, "ViewRubric", "Rubric", new { rubricID = Model.Criterion.Outcome.AssessmentRubric.RubricID }, null)</li>
        @*<li class="breadcrumb-item">@Html.ActionLink((String)Model.Criterion.Outcome.Name, "ViewOutcome", "Rubric", new { outcomeID = Model.Criterion.Outcome.OutcomeID }, null)</li>
        <li class="breadcrumb-item">@Html.ActionLink((String)Model.Criterion.Name, "ViewCriterion", "Rubric", new { criterionID = Model.Criterion.CriteriaID }, null)</li>*@
        <li class="breadcrumb-item active" aria-current="page">Edit</li>
    </ol>
</nav>
<h1>Edit Criterion</h1>
<br />

<form method="post" action="@Url.Action("SaveCriterion", "Rubric", new { criterionID = Model.Criterion.CriteriaID, rubricID = Model.RubricID })">
    <div class="form-row">
        <div class="form-group col-9">
            <label for="Name">Name:</label>
            <input type="text" name="Name" class="form-control" value="@Model.Criterion.Name" />
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-9">
            <label for="ExampleText">Example Text:</label>
		  <textarea name="ExampleText" class="form-control" rows="6" maxlength="200">@Model.Criterion.ExampleText</textarea>
        </div>
    </div>
    <fieldset class="form-group col-9">
        <div class="row">
            <legend class="col-form-label col-4 pt-0">Is Active:</legend>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="IsActive" id="IsActiveTrue" value="True" @(Model.Criterion.IsActive ? " checked=\"checked\"" : "")>
                <label class="form-check-label" for="IsActiveTrue">True</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="IsActive" id="IsActiveFalse" value="False" @(!Model.Criterion.IsActive ? " checked=\"checked\"" : "")>
                <label class="form-check-label" for="IsActiveFalse">False</label>
            </div>
        </div>
    </fieldset>
    @*<div class="form-row">
        <div class="form-group col-9">
            <label for="SortOrder">Sort Order:</label>
            <input type="text" name="SortOrder" class="form-control" />
        </div>
    </div>*@
    @*TODO InactiveDateTime*@
    <div class="row justify-content-end col-9">
        <div class="col-2 p-0 mx-1"><button class="btn btn-primary mx-1 col-12" type="submit" name="submit" formmethod="post">Update</button></div>
        <div class="col-2 p-0 mx-1"><a href="@Url.Action("ViewRubric", "Rubric", new { rubricID = Model.RubricID })" class="btn btn-danger col-12 mx-1">Cancel</a></div>
    </div>

    @*<div hidden>
        <input name="CriteriaID" value="@Model.Criterion.CriteriaID" type="hidden" />
    </div>*@
</form>