@using CLS_SLE.Models;
@model CLS_SLE.ViewModels.AddDepartmentViewModel
@{
    ViewBag.Title = "AddDepartment";
}


<style>
    #Act {
        font-size: 20px;
    }
</style>



<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Admin Dashboard", "AdminDashboard", "Admin")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Programs/Courses Dashboard", "ProgramDashboard", "Admin")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Departments", "Departments", "AdminDepartment")</li>
        <li class="breadcrumb-item active" aria-current="page">New Department</li>
    </ol>
</nav>
<h1>Add Department</h1>
<br />

@using (Html.BeginForm("CreateDepartment", "AdminDepartment", FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("Department Number:")
        @Html.EditorFor(Model => Model.Department.Number,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Department.Number)
    </div>
    <div class="form-group">
        @Html.Label("Department Name:")
        @Html.EditorFor(Model => Model.Department.Name,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Department.Name)
    </div>
    <div>
        @Html.DropDownListFor(Model => Model.SchoolSelection, new SelectList(Model.SchoolNames), "Select School",
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Department.IsActive)
    </div>
    @*<div class="form-group">
            @Html.Label("Is Active")
            @Html.EditorFor(Model => Model.Department.IsActive,
           new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Department.IsActive)
        </div>*@
    <br />
    @*<fieldset class="form-group">
            <div class="row">
                <legend class="col-form-label col-4 pt-0">Is Active:</legend>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="IsActive" id="IsActiveTrue" value="True" checked>
                    <label class="form-check-label" for="IsActiveTrue">True</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="IsActive" id="IsActiveFalse" value="False">
                    <label class="form-check-label" for="IsActiveFalse">False</label>
                </div>
            </div>
        </fieldset>*@

    <div class="form-group">
        @Html.LabelFor(Model => Model.Department.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Active
            @Html.RadioButtonFor(Model => Model.Department.IsActive, true, new { @checked = "checked" })
            &nbsp; &nbsp; &nbsp; &nbsp;
            InActive
            @Html.RadioButtonFor(Model => Model.Department.IsActive, false)
        </div>
    </div>

    <div class="row justify-content-end col-9">
        <div class="form-group col-2 p-0 mx-1"><input type="submit" class="btn btn-primary col-12 mx-1" value="Submit" /></div>
        <div class="col-2 p-0 mx-1"><a href="/AdminDepartment/Departments"><button type="button" class="btn btn-danger col-12 mx-1">Cancel</button></a></div>
    </div>


    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
        $("body").on("submit", "Form", function () {
            return confirm("Do you want to submit?");
        });
    </script>
    if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewBag.Message');
            };
        </script>
    }

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}