@using CLS_SLE.Models;
@{
    ViewBag.Title = "TSA Assessment";
    var r = Model.Rubric;
    var s = Model.Student;
    bool exists = false;
    var numCriteria = 0;
    var filledCriteria = 0;
    var rubricID = -1;
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Dashboard", "Dashboard", new { p = Session["personID"] })</li>
        <li class="breadcrumb-item">@Html.ActionLink("Student List", "StudentList", new { rubricID = r.RubricID })</li>
        <li class="breadcrumb-item active" aria-current="page">Assessment</li>
    </ol>
</nav>

<h1>@r.RubricName</h1>
<h2>@s.FirstName @s.LastName</h2>

<form id="form" action="/InstructorAssessments/AssessmentInput" method="post">
    @Html.AntiForgeryToken()

    <div class="list-group">
        @foreach (Outcome o in Model.Outcomes)
        {
            numCriteria = 0;
            filledCriteria = 0;
            foreach (RubricDetail rb in Model.Criteria)
            {
                if (o.Name.Equals(rb.OutcomeName))
                {
                    numCriteria++;
                    foreach (ScoreType i in Model.Selectors)
                    {

                        foreach (StudentScore ss in Model.StudentScores)
                        {
                            if (ss.CriteriaID == rb.CriteriaID && ss.ScoreTypeID == i.ScoreTypeID)
                            {
                                filledCriteria++;
                                break;
                            }
                        }
                    }
                }
            }
            <div id="@o.OutcomeID" class="list-group-item" style="padding: 0;">
                <div class="btn btn-outline-dark" style="font-size: 1.2rem; display: block; 
                    text-decoration: none; border-radius: 0px;" 
                     data-toggle="collapse" 
                     href="#group_@o.OutcomeID" role="button" aria-expanded="false" 
                     aria-controls="group_@o.OutcomeID">
                        @o.Name
                    <span class="float-right badge"><span id="filled_@o.OutcomeID">@filledCriteria</span> / @numCriteria</span>
                </div>


                <ul class="list-group list-group-flush collapse show" id="group_@o.OutcomeID">


                    @foreach (RubricDetail rb in Model.Criteria)
                    {
                        if (o.Name.Equals(rb.OutcomeName))
                        {

                            <li class="list-group-item">
                                <div class="float-left">
                                    @rb.CriteriaName
                                </div>
                                <div class="float-right">
                                    @foreach (ScoreType i in Model.Selectors)
                                    {
                                        <div class="form-check" id="@o.OutcomeID">
                                            @foreach (StudentScore ss in Model.StudentScores)
                                            {
                                                exists = false;
                                                if (ss.CriteriaID == rb.CriteriaID && ss.ScoreTypeID == i.ScoreTypeID)
                                                {
                                                    <label class="form-check-label desc">
                                                        @Html.RadioButton(rb.CriteriaID.ToString(), i.ScoreTypeID, new { Checked = "checked", @class = "form-check-input" })
                                                        @i.Description
                                                    </label>
                                                    exists = true;
                                                    break;
                                                }
                                            }
                                            @if (!exists)
                                            {
                                                <label class="form-check-label desc">
                                                    @Html.RadioButton(rb.CriteriaID.ToString(), i.ScoreTypeID, new { @class = "form-check-input" })
                                                    @i.Description
                                                </label>
                                            }

                                        </div>
                                    }
                                </div>



                            </li>

                        }
                    }

                </ul>
            </div>

        }
        </div>
    <div class="text-center">
        <div class="btn-group" role="group" style="margin-top:20px;">
            <input type="submit" class="btn btn-outline-dark" value="Previous Student" id="submit" name="lastStudent">
            <input type="submit" class="btn btn-outline-dark" value="Back to all students" id="submit" name="submit">
            <input type="submit" class="btn btn-outline-dark" value="Next Student" id="submit" name="nextStudent">
        </div>
    </div>
</form>

<style>
    input[type=radio]{
        float:left;
    }
</style>



@section scripts
{
    <script>
        $(function ()
        {

            var serialized = $('#form').serializeArray();
            $('input[type=radio]').on('change', function () {
                var outcomeID = this.parentElement.parentElement.id;
                var name = this.getAttribute("name");
                var count = 0;
                $.each(serialized, function (key, value) {
                    
                    if (value.name == name) {
                        count++;
                        
                    }
                    
                });
                if (count === 0) {
                    var filled = $('#filled_' + outcomeID).html();
                    filled++;
                    $('#filled_' + outcomeID).html(filled);
                    serialized = $('#form').serializeArray();
                } 
                
                //Normally i would do $('#form').serialize.length - 1 but it is broken up into multiple sections
                //add alert when changes are made
            });
        });
    </script>    
}