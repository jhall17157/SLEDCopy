@using CLS_SLE.Models
@model CLS_SLE.ViewModels.AddSectionViewModel
@{
    /**/

    /**/

    ViewBag.Title = "Add Section";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Admin Dashboard", "AdminDashboard", "Admin")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Programs/Courses Dashboard", "ProgramDashboard", "Admin")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Courses", "Courses", "AdminCourse", new { page = 1 }, null)</li>
        <li class="breadcrumb-item">@Html.ActionLink((String)(ViewBag.CourseName), "ViewCourse", "AdminCourse", new { courseID = ViewBag.CourseID }, null)</li>
        <li class="breadcrumb-item active" aria-current="page">New Section</li>
    </ol>
</nav>
<h1>Add Section</h1>
<br />
@using (Html.BeginForm("CreateSection", "AdminSection", new { courseID = ViewBag.CourseID }, FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("CRN:")
        @Html.EditorFor(Model => Model.Section.CRN,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Section.CRN)
    </div>
    <div class="form-group">
        @Html.Label("Semester:")
        <div class="form-group">
            @Html.DropDownListFor(Model => Model.SemesterSelection,
                     new SelectList(Model.SemesterList),
                     "Select Semester",
                     htmlAttributes: new { @class = "form-control" }
           )
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Subterm:")
        <div class="form-group">
            @Html.DropDownListFor(Model => Model.SubtermSelection,
                     new SelectList(Model.SubtermList),
                     "Select Subterm",
                     htmlAttributes: new { @class = "form-control" }
           )
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Course:")
        @Html.EditorFor(Model => Model.Section.Course.CourseName,
       new { htmlAttributes = new { @class = "form-control", Value = (String)ViewBag.CourseName, @readonly = "readonly" } })
    </div>
    @*<div class="form-group">
            @Html.Label("Lead Instructor:")
            <div class="form-group">
                @Html.DropDownListFor(Model => Model.LeadInstructorSelection,
                         new SelectList(Model.LeadInstructorList),
                         "Select Lead Instructor",
                         htmlAttributes: new { @class = "form-control" }
               )
            </div>
        </div>*@
    <div class="form-group">
        @Html.Label("Lead Instructor:")
        <div class="form-group input-group-append">
            <input name="LeadInstructorSelection" id="LeadInstructorSelection" class="form-control" placeholder="Select Lead Instructor" />
        </div>
        <datalist id="leadInstructors">
            @foreach (string leadInstructorList in Model.LeadInstructorList)
            {
                <option value="@leadInstructorList"></option>
            }
        </datalist>
    </div>
    <div class="form-group">
        @Html.Label("Offering Number:")
        @Html.EditorFor(Model => Model.Section.OfferingNumber,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Section.OfferingNumber)
    </div>
    <div class="form-group">
        @Html.Label("Begin Date:")
        @Html.EditorFor(Model => Model.Section.BeginDate,
       new { htmlAttributes = new { type = "date", @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Section.BeginDate)
    </div>
    <div class="form-group">
        @Html.Label("End Date:")
        @Html.EditorFor(Model => Model.Section.EndDate,
       new { htmlAttributes = new { type = "date", @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Section.EndDate)
    </div>
    <div class="form-group">
        <div class="row">
            @Html.Label("Is Cancelled:", htmlAttributes: new { @class = "col-3" })
            <div class="col-sm-1">
                @Html.RadioButtonFor(Model => Model.Section.IsCancelled, true)
                @Html.Label("Yes")
            </div>
            <div class="col-sm-8">
                @Html.RadioButtonFor(Model => Model.Section.IsCancelled, false, new { @checked = "checked" })
                @Html.Label("No")
            </div>
        </div>
    </div>

    <div class="row justify-content-end col-9">
        <div class="form-group col-2 p-0 mx-1"><input type="submit" class="btn btn-primary col-12 mx-1" value="Submit" /></div>
        <div class="col-2 p-0 mx-1"><a href="/AdminCourse/ViewCourse?courseID=@ViewBag.CourseID"><button type="button" class="btn btn-danger col-12 mx-1">Cancel</button></a></div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("#LeadInstructorSelection").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("LeadInstructorAutoComplete","AdminSection")',
                    dataType: "json",
                    data: {
                        search: $("#LeadInstructorSelection").val() },
                        appendTo: "#LeadInstructorSelection",
                        success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: "" + item.id + " - " + item.name , value: "" + item.id + " - " + item.name
                                //label: "" + item.name + " - " + item.id , value: item.idNumber
                            };
                        }))
                    },
                    error: function (xhr, status, error) { alert(error)/*alert("Error")*/; }
                });
            },
            select: function (e, ui) {
            }
        });
    </script>
}