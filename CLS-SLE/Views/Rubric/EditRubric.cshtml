@model CLS_SLE.ViewModels.UpdateRubric
@{
    ViewBag.Title = "Edit Rubric";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Admin Dashboard", "AdminDashboard", "Admin")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Assessments", "Assessments", "Admin")</li>
        <li class="breadcrumb-item">@Html.ActionLink((String)Model.RubricAssessment.Assessment.Name, "ViewAssessment", "Admin", new { assessmentID = Model.RubricAssessment.AssessmentID }, null)</li>
        <li class="breadcrumb-item">@Html.ActionLink((String)Model.RubricAssessment.AssessmentRubric.Name, "ViewRubric", "Rubric", new { rubricID = Model.RubricAssessment.RubricID, assessmentID = Model.RubricAssessment.AssessmentID }, null)</li>
        <li class="breadcrumb-item active" aria-current="page">Edit</li>
    </ol>
</nav>
<h1>Edit Rubric</h1>
<br />

@using (Html.BeginForm("SaveRubric", "Rubric", new { Model.RubricAssessment.RubricID, assessmentID = Model.RubricAssessment.AssessmentID }, FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("Rubric Name:")
        @Html.EditorFor(Model => Model.AssessmentRubric.Name,
    new { htmlAttributes = new { @class = "form-control", @Value = Model.AssessmentRubric.Name } })
        @*@Html.ValidationMessageFor(Model => Model.AssessmentRubric.Name)*@
    </div>
    <div class="form-group">
        @Html.Label("Description:")
        @Html.EditorFor(Model => Model.AssessmentRubric.Description,
    new { htmlAttributes = new { @class = "form-control", @Value = Model.AssessmentRubric.Description } })
        @*@Html.ValidationMessageFor(Model => Model.AssessmentRubric.Description)*@
    </div>
    <fieldset class="form-group">
        <label>Related Assessments:</label><br>
        <div id="relatedAssessments" class="input-append">
            @{
                byte id = 1;

                if (ViewBag.RelatedAssessments.Count > 1)
                {
                    foreach (string relatedAssessment in ViewBag.RelatedAssessments)
                    {
                        <text>
                            <div class="input-group relatedAssessment">
                                <input list="assessments" name="relatedAssessment@(id)" class="form-control" value="@relatedAssessment">
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-danger deleteRelatedAssessment"><i class="fas fa-trash"></i></button>
                                </div>
                            </div>
                        </text>
                        id++;
                    }
                }
                else
                {
                    <text>
                        <div class="input-group relatedAssessment">
                            <input list="assessments" name="relatedAssessment@(id)" class="form-control" value="@ViewBag.RelatedAssessments[0]">
                        </div>
                    </text>
                }
            }
        </div>
        <datalist id="assessments">
            @foreach (string assessment in ViewBag.Assessments)
            {
                <option value="@assessment" />
            }
        </datalist><br>
        <button type="button" class="btn btn-primary" id="addRelatedAssessment">Add Related Assessment</button>
    </fieldset>
    <fieldset class="form-group">
        <div class="row">
            <legend class="col-form-label col-2 pt-0">Is Active:</legend>
            <div class="form-check form-check-inline">
                <label class="form-check-input" id="IsActive" for="IsActiveTrue">True</label>
                @Html.RadioButtonFor(Model => Model.AssessmentRubric.IsActive, "True", Model.AssessmentRubric.IsActive ? new { Checked = "checked" } : null)
            </div>
            <div class="form-check form-check-inline">
                <label class="form-check-input" id="IsActiveFalse" for="IsActiveFalse">False</label>
                @Html.RadioButtonFor(Model => Model.AssessmentRubric.IsActive, "False", Model.AssessmentRubric.IsActive ? null : new { Checked = "checked" })
            </div>
        </div>
    </fieldset>

    <fieldset class="form-group">
        @Html.Label("Score Set:")
        @Html.DropDownListFor(Model => Model.AssessmentRubric.ScoreSetID, new SelectList(ViewBag.ScoreSets, "ScoreSetID", "Name"),
            new { @class = "form-control input-append", @Value = Model.AssessmentRubric.ScoreSetID })
    </fieldset>

    <!-- These should belong to the individual rubric assessment rows... need to fix!
        <div class="row">
        <div class="form-group col-4">
            @Html.Label("Start Date:")
            @Html.TextBoxFor(model => model.RubricAssessment.StartDate,
            new { @class = "form-control", @Value = Model.RubricAssessment.StartDate.ToString("MM/dd/yyyy") })
        </div>
        <div class="form-group col-4">
            @Html.Label("End Date:")
            @Html.TextBoxFor(model => model.RubricAssessment.EndDate,
            new { @class = "form-control", @Value = Model.RubricAssessment.EndDate != null ? Model.RubricAssessment.EndDate?.ToString("MM/dd/yyyy") : null })
        </div>
    </div>-->
    <div class="row justify-content-end col-9">
        <div class="col-2 p-0 mx-1"><button class="btn btn-primary mx-1 col-12" type="submit" name="submit" formmethod="post">Submit</button></div>
        <div class="col-2 p-0 mx-1"><a href="@Url.Action("ViewRubric", "Rubric", new { rubricID = Model.RubricAssessment.RubricID, assessmentID = Model.RubricAssessment.AssessmentID })" class="btn btn-danger col-12 mx-1">Cancel</a></div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/Scripts/relatedAssessments.js")
}