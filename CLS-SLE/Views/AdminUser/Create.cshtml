
@model CLS_SLE.ViewModels.AddUserViewModel
@{
    ViewBag.Title = "Create";
}

@section Styles
{
<style>
    .custom-switch {
  padding-left: 2.25rem;
  padding-bottom: 1rem; 
}

.custom-control-label { 
  padding-top: 0.5rem;
  padding-left: 2rem;
  padding-bottom: 0.1rem;
}

.custom-switch .custom-control-label::before {
  left: -2.25rem;
  height: 1.8rem;
  width: 3.2rem;    
  pointer-events: all;
  border-radius: 1rem;
}

.custom-switch .custom-control-label::after {
  top: calc(0.25rem + 2px);
  left: calc(-2.25rem + 2px);
  width: calc(1.8rem - 4px);  
  height: calc(1.8rem - 4px);  
  background-color: #adb5bd;
  border-radius: 2rem; 
  transition: background-color 0.4s ease-in-out, border-color 0.4s ease-in-out, box-shadow 0.4s ease-in-out, -webkit-transform 0.4s ease-in-out;
  transition: transform 0.4s ease-in-out, background-color 0.4s ease-in-out, border-color 0.4s ease-in-out, box-shadow 0.4s ease-in-out;
  transition: transform 0.4s ease-in-out, background-color 0.4s ease-in-out, border-color 0.4s ease-in-out, box-shadow 0.4s ease-in-out, -webkit-transform 0.4s ease-in-out;
}
@@media (prefers-reduced-motion: reduce) {
  .custom-switch .custom-control-label::after {
    transition: none;
  }
}

.custom-switch .custom-control-input:checked ~ .custom-control-label::after {
  background-color: #fff;
  -webkit-transform: translateX(1.4rem); 
  transform: translateX(1.4rem); 
}
</style>    
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Admin Dashboard", "AdminDashboard", "Admin")</li>
        <li class="breadcrumb-item">@Html.ActionLink("Manage Users", "ManageUsers", "AdminUser")</li>
        <li class="breadcrumb-item active" aria-current="page">New User</li>
    </ol>
</nav>
<h1>Create User</h1>
<br />

@using (Html.BeginForm("CreateUser", "AdminUser", FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("First Name:")
        @Html.EditorFor(Model => Model.Person.FirstName,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Person.FirstName)
    </div>
    <div class="form-group">
        @Html.Label("Last Name:")
        @Html.EditorFor(Model => Model.Person.LastName,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Person.LastName)
    </div>
    <div class="form-group">
        @Html.Label("Login:")
        @Html.EditorFor(Model => Model.User.Login,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.Login)
    </div>
    <div class="form-group">
        @Html.Label("ID:")
        @Html.EditorFor(Model => Model.Person.IdNumber,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Person.IdNumber)
    </div>
    <div class="form-group">
        @Html.Label("Email:")
        @Html.EditorFor(Model => Model.User.Email,
       new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.User.Email)
    </div>
    <div class="form-group row custom-control custom-switch">
        @Html.CheckBoxFor(Model => Model.User.IsActive,
       new { @class = "custom-control-input col-1", @checked = false })
        <label class="custom-control-label col-11" for="User_IsActive">Active</label>
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-primary" value="Submit" />
    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
